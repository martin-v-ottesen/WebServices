
package ws.shipper;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "shipperService", targetNamespace = "http://shipper.ws", wsdlLocation = "file:/C:/Users/Martin/Documents/DTU/WebServices/Exercises/Exercise7/Shipper2/src/conf/xml-resources/web-services/ShipperImpl/wsdl/shipper.wsdl")
public class ShipperService
    extends Service
{

    private final static URL SHIPPERSERVICE_WSDL_LOCATION;
    private final static WebServiceException SHIPPERSERVICE_EXCEPTION;
    private final static QName SHIPPERSERVICE_QNAME = new QName("http://shipper.ws", "shipperService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Martin/Documents/DTU/WebServices/Exercises/Exercise7/Shipper2/src/conf/xml-resources/web-services/ShipperImpl/wsdl/shipper.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SHIPPERSERVICE_WSDL_LOCATION = url;
        SHIPPERSERVICE_EXCEPTION = e;
    }

    public ShipperService() {
        super(__getWsdlLocation(), SHIPPERSERVICE_QNAME);
    }

    public ShipperService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SHIPPERSERVICE_QNAME, features);
    }

    public ShipperService(URL wsdlLocation) {
        super(wsdlLocation, SHIPPERSERVICE_QNAME);
    }

    public ShipperService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SHIPPERSERVICE_QNAME, features);
    }

    public ShipperService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ShipperService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ShipperPortType
     */
    @WebEndpoint(name = "shipperPortTypeBindingPort")
    public ShipperPortType getShipperPortTypeBindingPort() {
        return super.getPort(new QName("http://shipper.ws", "shipperPortTypeBindingPort"), ShipperPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ShipperPortType
     */
    @WebEndpoint(name = "shipperPortTypeBindingPort")
    public ShipperPortType getShipperPortTypeBindingPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://shipper.ws", "shipperPortTypeBindingPort"), ShipperPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SHIPPERSERVICE_EXCEPTION!= null) {
            throw SHIPPERSERVICE_EXCEPTION;
        }
        return SHIPPERSERVICE_WSDL_LOCATION;
    }

}
