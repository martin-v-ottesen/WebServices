
package dk.dtu.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import dk.dtu.imm.fastmoney.types.CreditCardInfoType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AirlineReservation", targetNamespace = "http://ws.dtu.dk/")
@XmlSeeAlso({
    dk.dtu.imm.fastmoney.types.ObjectFactory.class,
    dk.dtu.imm.fastmoney.ObjectFactory.class,
    dk.dtu.ws.ObjectFactory.class
})
public interface AirlineReservation {


    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clear", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.Clear")
    @ResponseWrapper(localName = "clearResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.ClearResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/clearRequest", output = "http://ws.dtu.dk/AirlineReservation/clearResponse")
    public boolean clear();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws CreditCardFaultMessage
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookFlight", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.BookFlight")
    @ResponseWrapper(localName = "bookFlightResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.BookFlightResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/bookFlightRequest", output = "http://ws.dtu.dk/AirlineReservation/bookFlightResponse", fault = {
        @FaultAction(className = CreditCardFaultMessage.class, value = "http://ws.dtu.dk/AirlineReservation/bookFlight/Fault/CreditCardFaultMessage")
    })
    public boolean bookFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        CreditCardInfoType arg1)
        throws CreditCardFaultMessage
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws CreditCardFaultMessage
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelFlight", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.CancelFlight")
    @ResponseWrapper(localName = "cancelFlightResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.CancelFlightResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/cancelFlightRequest", output = "http://ws.dtu.dk/AirlineReservation/cancelFlightResponse", fault = {
        @FaultAction(className = CreditCardFaultMessage.class, value = "http://ws.dtu.dk/AirlineReservation/cancelFlight/Fault/CreditCardFaultMessage")
    })
    public boolean cancelFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        CreditCardInfoType arg2)
        throws CreditCardFaultMessage
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<dk.dtu.ws.FlighListObject>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.GetFlightsResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/getFlightsRequest", output = "http://ws.dtu.dk/AirlineReservation/getFlightsResponse")
    public List<FlighListObject> getFlights(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        DateTime arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAirline", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.CreateAirline")
    @ResponseWrapper(localName = "createAirlineResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.CreateAirlineResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/createAirlineRequest", output = "http://ws.dtu.dk/AirlineReservation/createAirlineResponse")
    public boolean createAirline(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws FileNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setFightData", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.SetFightData")
    @ResponseWrapper(localName = "setFightDataResponse", targetNamespace = "http://ws.dtu.dk/", className = "dk.dtu.ws.SetFightDataResponse")
    @Action(input = "http://ws.dtu.dk/AirlineReservation/setFightDataRequest", output = "http://ws.dtu.dk/AirlineReservation/setFightDataResponse", fault = {
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://ws.dtu.dk/AirlineReservation/setFightData/Fault/FileNotFoundException")
    })
    public boolean setFightData(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Flightinformation arg1)
        throws FileNotFoundException_Exception
    ;

}
